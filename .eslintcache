[{"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App.js":"1","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\reportWebVitals.js":"2","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\index.js":"3","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\constants.js":"4","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\utils.js":"5","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\enemy.js":"6","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\serviceWorker.js":"7","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\player.js":"8","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\game.js":"9","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\lobby.js":"10","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\bullet.js":"11"},{"size":807,"mtime":1606140754367,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":894,"mtime":1606140754367,"results":"15","hashOfConfig":"13"},{"size":153,"mtime":1608220858068,"results":"16","hashOfConfig":"13"},{"size":71,"mtime":1606140490575,"results":"17","hashOfConfig":"13"},{"size":1819,"mtime":1608731715685,"results":"18","hashOfConfig":"13"},{"size":5481,"mtime":1606140630911,"results":"19","hashOfConfig":"13"},{"size":2372,"mtime":1609601469190,"results":"20","hashOfConfig":"13"},{"size":2246,"mtime":1606140490569,"results":"21","hashOfConfig":"13"},{"size":652,"mtime":1606140490571,"results":"22","hashOfConfig":"13"},{"size":967,"mtime":1609601469191,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sp4tx2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App.js",[],["53","54"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\reportWebVitals.js",[],["55","56"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\index.js",[],["57","58"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\constants.js",[],["59","60"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\utils.js",[],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\enemy.js",["61"],"import { getRandomNumber } from './utils';\r\nimport { SCREEN, GAME_HEIGHT, GAME_WIDTH } from './constants';\r\n\r\nconst centerX = GAME_WIDTH / 2;\r\nconst centerY = GAME_HEIGHT / 2;\r\n\r\n// eslint-disable-next-line\r\nexport class Enemy {\r\n    speed = 2;\r\n\r\n    dead = false\r\n\r\n    xPosition\r\n\r\n    yPosition\r\n\r\n    constructor(xPosition, yPosition) {\r\n      this.xPosition = xPosition;\r\n      this.yPosition = yPosition;\r\n      this.radius = getRandomNumber(10, 20);\r\n    }\r\n\r\n    isDead = () => {\r\n      const relativeX = Math.abs(this.xPosition - centerX);\r\n      const relativeY = Math.abs(this.yPosition - centerY);\r\n\r\n      if (relativeX < 20 && relativeY < 20) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    update = (player, bullets) => {\r\n      if (this.dead) return;\r\n      const relativeX = this.xPosition - centerX;\r\n      const relativeY = this.yPosition - centerY;\r\n      const angle = Math.atan2(relativeY, relativeX) * 180 / Math.PI;\r\n      const x = Math.sin((angle * Math.PI) / 180) * this.speed;\r\n      const y = Math.cos((angle * Math.PI) / 180) * this.speed;\r\n      this.xPosition -= y;\r\n      this.yPosition -= x;\r\n\r\n      if (!this.dead && this.isDead()) {\r\n        this.dead = true;\r\n        player.deductHealth();\r\n      }\r\n\r\n      if (!this.dead) {\r\n        bullets.forEach((bullet) => {\r\n          if (Math.abs(bullet.xPosition - this.xPosition) < this.radius && Math.abs(bullet.yPosition - this.yPosition) < this.radius) {\r\n        player.increaseScore();\r\n            this.dead = true;\r\n            bullet.dead = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    draw = (ctx) => {\r\n      ctx.beginPath();\r\n      ctx.arc(this.xPosition, this.yPosition, this.radius, 0, 2 * Math.PI);\r\n      ctx.fillStyle = '#1E4708';\r\n      ctx.fill();\r\n\r\n      ctx.lineWidth = 0.3;\r\n      ctx.stroke();\r\n    }\r\n}",["62","63"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\serviceWorker.js",[],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\player.js",["64"],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\game.js",["65","66","67","68"],"import React, { useEffect } from 'react';\r\nimport { SCREEN, GAME_HEIGHT, GAME_WIDTH } from './constants';\r\nimport { Player } from './player';\r\nimport { Enemy } from './enemy';\r\nimport { Bullet } from './bullet';\r\nimport { getRandomNumber } from './utils';\r\n\r\n\r\nconst MAX_ENEMY_COUNT = 10;\r\n\r\nfunction Game({ setScreen, setScore, userName }) {\r\n  let canvas;\r\n  let ctx;\r\n  let player;\r\n  let lastEnemySpawnAt = Date.now();\r\n  useEffect(() => {\r\n    player = new Player(GAME_WIDTH / 2, GAME_HEIGHT / 2);\r\n    canvas = document.getElementById('myCanvas');\r\n    ctx = canvas.getContext('2d');\r\n\r\n    let enemies = [];\r\n    let bullets = [];\r\n    const fireBulletCb = (angle, xPosition, yPosition) => bullets.push(new Bullet(angle, xPosition, yPosition));\r\n\r\n    setInterval(() => {\r\n      ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n      if (player.dead) {\r\n        setScreen(SCREEN.GAME_OVER);\r\n        setScore(player.score);\r\n        return;\r\n      }\r\n\r\n      player.update(fireBulletCb);\r\n      player.draw(ctx);\r\n\r\n      const random = getRandomNumber(0, 200);\r\n      const random2 = getRandomNumber(0, 200);\r\n      if (enemies.length < MAX_ENEMY_COUNT && (Date.now() - lastEnemySpawnAt) > 1500) {\r\n        enemies.push(new Enemy(\r\n          Math.random() < 0.5 ? getRandomNumber(-random, GAME_WIDTH / 2 - random)\r\n            : getRandomNumber(GAME_WIDTH + random, GAME_WIDTH / 2 + random),\r\n          Math.random() < 0.5 ? getRandomNumber(-random2, GAME_HEIGHT / 2 - random2)\r\n            : getRandomNumber(GAME_WIDTH + random2, GAME_HEIGHT / 2 + random2),\r\n        ));\r\n        lastEnemySpawnAt = Date.now();\r\n      }\r\n\r\n      enemies = enemies.filter((enemy) => !enemy.dead);\r\n      enemies.forEach((enemy) => {\r\n        enemy.update(player, bullets);\r\n        enemy.draw(ctx);\r\n      });\r\n\r\n      bullets = bullets.filter((bullet) => !bullet.dead);\r\n      bullets.forEach((bullet) => {\r\n        bullet.update();\r\n        bullet.draw(ctx);\r\n      });\r\n    }, 1000 / 30);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"myCanvas\" width={GAME_WIDTH} height={GAME_HEIGHT} style={{ border: '1px solid #000000' }}>\r\n        Your browser does not support the HTML canvas tag.\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\lobby.js",[],"C:\\Users\\x\\bitirmeprojesi\\online-game\\src\\App\\bullet.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"70","replacedBy":"76"},{"ruleId":"72","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"70","replacedBy":"84"},{"ruleId":"72","replacedBy":"85"},{"ruleId":"80","severity":1,"message":"86","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":17,"column":14,"nodeType":"89","endLine":17,"endColumn":57},{"ruleId":"87","severity":1,"message":"90","line":18,"column":14,"nodeType":"91","endLine":18,"endColumn":49},{"ruleId":"87","severity":1,"message":"92","line":19,"column":11,"nodeType":"91","endLine":19,"endColumn":34},{"ruleId":"87","severity":1,"message":"93","line":46,"column":28,"nodeType":"91","endLine":46,"endColumn":38},{"ruleId":"80","severity":1,"message":"81","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":16},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],["94"],["95"],["94"],["95"],"no-unused-vars","'SCREEN' is defined but never used.","Identifier","unusedVar",["94"],["95"],"'Bullet' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'player' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'canvas' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'lastEnemySpawnAt' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]